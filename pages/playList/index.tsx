/* eslint-disable jsx-a11y/alt-text */
/* eslint-disable @next/next/no-img-element */
import dynamic from "next/dynamic";
import Head from "next/head";
import Link from "next/link";
import React from "react";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import { faPlay } from "@fortawesome/free-solid-svg-icons";
import { IconProp } from "@fortawesome/fontawesome-svg-core";
import { connect } from "react-redux";


 const PlayList = ({songs,setCurrentIndex,setStatus}) => {
  const MainHead = dynamic(() => import("../../components/mainHead"));
  const NavItem = dynamic(() => import("../../components/navItem"));
  const Media = dynamic(() => import("../../components/media"));
  const Play = faPlay as IconProp;


  const selectSong = (id) =>{
    setCurrentIndex(id);
    setStatus(true);
  }

  const playAllSong = () =>{
    setCurrentIndex(0);
    setStatus(true);
  }

  return (
    <>
      <Head>
        <title>MP3 | Nghe tải nhạc hay chất lượng</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/logo.png" />
      </Head>
      <div className="flex h-screen">
        <section className="flex-1 bg-[#170f23] ml-[240px]">
          <MainHead />
          <div className="flex px-[60px] text-white text-center pb-[120px]">
            <div className="w-[300px] mr-[40px]">
              <div className="w-[300px] h-[300px] overflow-hidden rounded-[8px]">
                <img
                  src="/audio_default.png"
                  className="w-[100%] h-[100%] hover:scale-105 transition-[500ms]"
                  alt=""
                ></img>
              </div>
              <p className=" text-[20px] font-bold mt-[8px] ">Playlist #1</p>
              <p className="text-[12px] text-[#FFFFFF80]">
                Tạo bởi <span className="text-white">Nguyễn Mạnh Dũng</span>
              </p>
              <p className="text-[12px] text-[#FFFFFF80]">Công khai</p>

              <Link href="/playList">
                <a className="">
                  <span onClick={() =>playAllSong()}  className="mr-[8px] flex ml-[50%] translate-x-[-50%] items-center justify-center uppercase bg-[#7200a1] my-[20px] py-[9px] rounded-[16px]">
                    <FontAwesomeIcon
                      icon={Play}
                      className="w-[16px] h-[16px]"
                    />
                  Phát tất cả
                  </span>
                </a>
              </Link>
            </div>
            <div className="flex-1 p-[10px]">
              <div className="text-[#FFFFFF80] uppercase flex justify-between text-[12px]">
                <span>Bài hát</span>
                <span>Album</span>
                <span>Thời Gian</span>
              </div>
              <ul className="mt-[12px] last:border-b-[0.5px] border-[#FFFFFF80]">
                {songs.map((item, index) => (
                      <li key={index} onClick={()=>selectSong(item.id-1)} className="flex  justify-between items-center p-[10px] text-[12px] text-[#FFFFFF80] border-t-[0.5px] border-[#ffffff80] cursor-pointer">
                        <div className="flex items-center ml-[-8px]">
                          <img
                            src={item.image}
                            className="w-[40px] h-[40px]"
                          ></img>
                          <div className="ml-[8px] flex flex-col">
                            <p className="text-[14px] text-left text-white">{item.name}</p>
                            <p className="hover:text-[#7200a1] hover:underline">{item.singer}</p>
                          </div>
                        </div>
                        {item?.album && <p className="ml-[-120px] hover:text-[#7200a1] hover:underline">{item?.album}</p>}
                        <p>{item.time}</p>
                      </li>
                ))}
              </ul>
            </div>
          </div>
        </section>
        <NavItem />
        <Media />
      </div>
    </>
  );
}


const mapStateToProps = (state) => {
  return {
    songs: state.songs,
  };
};

const mapDispatchToProps = (dispatch) => {
  return {
    setCurrentIndex: (value) => dispatch({ type: "SET_INDEX", payload: value }),
    setCurrentSong: (value) => dispatch({ type: "SET_SONG", payload: value }),
    setStatus: (value) => dispatch({ type: "SET_STATUS", payload: value }),
  };
};
export default connect(mapStateToProps, mapDispatchToProps)(PlayList);
